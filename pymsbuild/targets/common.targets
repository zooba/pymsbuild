<Project>
  <!-- Managing content files -->
  <Target Name="_AssignContentProperties">
    <ItemGroup>
      <Content>
        <TargetDir Condition="%(TargetDir) == ''">$([msbuild]::EnsureTrailingSlash($([System.IO.Path]::GetDirectoryName(%(Name)))))</TargetDir>
        <TargetName Condition="%(TargetName) == ''">$([System.IO.Path]::GetFileNameWithoutExtension(%(Name)))</TargetName>
        <TargetExt Condition="%(TargetExt) == ''">$([System.IO.Path]::GetExtension(%(Name)))</TargetExt>
      </Content>
      <Content>
        <RelativeSource Condition="%(RelativeSource) == ''">$([msbuild]::MakeRelative($(SourceDir.TrimEnd($(_Sep))), %(FullPath)))</RelativeSource>
        <Destination Condition="%(IncludeInWheel)">$([msbuild]::EnsureTrailingSlash($(OutDir)))%(TargetDir)%(TargetName)%(TargetExt)</Destination>
        <Source>$([msbuild]::EnsureTrailingSlash($(OutDir)))%(RelativeSource)</Source>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="_MkdirContent" DependsOnTargets="_AssignContentProperties">
    <ItemGroup>
      <_Outputs Include="%(Content.Destination)" />
    </ItemGroup>
    <MakeDir Directories="%(_Outputs.RootDir)%(_Outputs.Directory)" />
  </Target>

  <Target Name="_CopyContent" Inputs="@(Content)" Outputs="%(Content.Destination)" DependsOnTargets="_MkdirContent">
    <Copy SourceFiles="%(Content.FullPath)" DestinationFiles="%(Content.Destination)" Condition="%(Content.Destination) != ''">
      <Output TaskParameter="CopiedFiles" ItemName="FileWrites" />
    </Copy>
  </Target>

  <!-- Managing dependencies -->
  <Target Name="_AssignProjectProperties">
    <ItemGroup>
      <Project>
        <Properties>
        _ProjectBuildTarget=$(_ProjectBuildTarget);
        IntDir=$([msbuild]::EnsureTrailingSlash(`%(IntDir)`))$(_EscapeSep);
        SourceRootDir=$([msbuild]::EnsureTrailingSlash(`$(SourceRootDir)`))$(_EscapeSep);
        SourceDir=$([msbuild]::EnsureTrailingSlash($(SourceDir)))$([msbuild]::EnsureTrailingSlash(%(TargetDir)))$(_EscapeSep);
        TargetName=%(TargetName);
        TargetExt=%(TargetExt);
        %(Properties)
        </Properties>
      </Project>
      <Project>
        <Properties Condition="$(_ProjectBuildTarget) != 'BuildSdist'">
        OutDir=$([msbuild]::EnsureTrailingSlash($(OutDir)))$([msbuild]::EnsureTrailingSlash(%(TargetDir)))$(_EscapeSep);%(Properties)
        </Properties>
        <Properties Condition="$(_ProjectBuildTarget) == 'BuildSdist'">
        OutDir=$([msbuild]::EnsureTrailingSlash(`$(OutDir)`))$(_EscapeSep);%(Properties)
        </Properties>
      </Project>
    </ItemGroup>
  </Target>

  <Target Name="BuildDependencies" DependsOnTargets="_AssignProjectProperties" Condition="@(Project) != ''">
    <Message Text="Building %(Project.Name) with %(Project.Properties)" Importance="$(_Low)" />
    <MSBuild Projects="@(Project)" Targets="$(_ProjectBuildTarget)" Properties="%(Project.Properties)" />
  </Target>

  <Target Name="CleanDependencies" DependsOnTargets="_AssignProjectProperties" Condition="@(Project) != ''">
    <MSBuild Projects="@(Project)" Targets="Clean" Properties="%(Project.Properties)" />
  </Target>

  <!-- Standard builds -->
  <Target Name="PrepareForBuild" />
  <Target Name="CoreBuild" />
  <Target Name="Build" DependsOnTargets="PrepareForBuild;_AssignContentProperties;BuildDependencies;CoreBuild;_CopyContent" />
  <Target Name="Clean" />
  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />

  <!-- In-place builds -->
  <Target Name="CalculateInPlace">
    <ItemGroup>
      <InPlace Include="@(Content)" />
      <InPlace>
        <Destination>$([msbuild]::EnsureTrailingSlash($(SourceDir)))%(Name)</Destination>
      </InPlace>
    </ItemGroup>
  </Target>

  <Target Name="_InPlace_Exclude" AfterTargets="CalculateInPlace">
    <ItemGroup>
      <_ToRemove Include="@(InPlace)" Condition="%(Extension) == '.exp'" />
      <InPlace Remove="@(_ToRemove)" />
    </ItemGroup>
  </Target> 

  <Target Name="_MkdirInPlace">
    <ItemGroup>
      <_Outputs Include="%(InPlace.Destination)" />
    </ItemGroup>
    <MakeDir Directories="%(_Outputs.RootDir)%(_Outputs.Directory)" />
  </Target>

  <Target Name="_CopyInPlace" Inputs="@(InPlace)" Outputs="%(InPlace.Destination)">
    <ItemGroup>
      <FileWrites Include="%(InPlace.Destination)" Condition="!Exists(%(InPlace.Destination))" />
    </ItemGroup>
    <Copy SourceFiles="%(InPlace.FullPath)" DestinationFiles="%(InPlace.Destination)" />
  </Target>

  <Target Name="BuildInPlace" DependsOnTargets="$(BuildInPlaceDependsOn)">
    <Message Text="Copied to source tree:" Importance="high" Condition="@(InPlace) != ''" />
    <Message Text=" - %(InPlace.Destination)" Importance="high" Condition="@(InPlace) != ''" />
  </Target>

  <Target Name="RebuildInPlace" DependsOnTargets="Clean;BuildInPlace" />


  <!-- Clean support -->
  <Target Name="_SaveFileWrites" AfterTargets="Build;BuildSdist;BuildInPlace">
    <WriteLinesToFile File="$(IntDir)/$(TargetName).writes.txt"
                      Lines="@(FileWrites)"
                      Overwrite="true" />
    <Message Text="Files written:%0A -@(FileWrites, '%0A -')"
             Importance="$(_Low)"
             Condition="@(FileWrites) != ''" />
  </Target>

  <Target Name="_CleanFileWrites" BeforeTargets="Clean" DependsOnTargets="CleanDependencies">
    <ReadLinesFromFile File="$(IntDir)/$(TargetName).writes.txt">
      <Output TaskParameter="Lines" ItemName="FileWrites" />
    </ReadLinesFromFile>
    <Delete Files="@(FileWrites)" />
    <ItemGroup>
      <FileWrites Remove="@(FileWrites)" />
    </ItemGroup>
  </Target>

  <Import Project="sdist.targets" />
</Project>
