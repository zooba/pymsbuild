<Project>
  <Target Name="_AssignContentProperties">
    <ItemGroup>
      <Content>
        <TargetDir Condition="%(TargetDir) == ''">$([msbuild]::EnsureTrailingSlash($([System.IO.Path]::GetDirectoryName(%(Name)))))</TargetDir>
        <TargetName Condition="%(TargetName) == ''">$([System.IO.Path]::GetFileNameWithoutExtension(%(Name)))</TargetName>
        <TargetExt Condition="%(TargetExt) == ''">$([System.IO.Path]::GetExtension(%(Name)))</TargetExt>
      </Content>
      <Content>
        <RelativeSource Condition="%(RelativeSource) == ''">$([msbuild]::MakeRelative($(SourceDir.TrimEnd(`\`)), %(FullPath)))</RelativeSource>
        <Destination Condition="%(IncludeInWheel)">$([msbuild]::EnsureTrailingSlash($(OutDir)))%(TargetDir)%(TargetName)%(TargetExt)</Destination>
        <Source>$([msbuild]::EnsureTrailingSlash($(OutDir)))%(RelativeSource)</Source>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="_MkdirContent" DependsOnTargets="_AssignContentProperties">
    <ItemGroup>
      <_Outputs Include="%(Content.Destination)" />
    </ItemGroup>
    <MakeDir Directories="%(_Outputs.RootDir)%(_Outputs.Directory)" />
  </Target>

  <Target Name="_CopyContent" Inputs="@(Content)" Outputs="%(Content.Destination)" DependsOnTargets="_MkdirContent">
    <Copy SourceFiles="%(Content.FullPath)" DestinationFiles="%(Content.Destination)" Condition="%(Content.Destination) != ''">
      <Output TaskParameter="CopiedFiles" ItemName="FileWrites" />
    </Copy>
  </Target>

  <Target Name="_AssignProjectProperties">
    <ItemGroup>
      <Project>
        <Properties>_ProjectBuildTarget=$(_ProjectBuildTarget);IntDir=$([msbuild]::EnsureTrailingSlash(`%(IntDir)`))\;SourceRootDir=$([msbuild]::EnsureTrailingSlash(`$(SourceRootDir)`))\;SourceDir=$([msbuild]::EnsureTrailingSlash(`$(SourceDir)\$(TargetName)`))\;TargetName=%(TargetName);TargetExt=%(TargetExt);%(Properties)</Properties>
      </Project>
      <Project>
        <Properties Condition="$(_ProjectBuildTarget) != 'BuildSdist'">OutDir=$([msbuild]::EnsureTrailingSlash(`$(OutDir)\%(TargetDir)`))\;%(Properties)</Properties>
        <Properties Condition="$(_ProjectBuildTarget) == 'BuildSdist'">OutDir=$([msbuild]::EnsureTrailingSlash(`$(OutDir)`))\;%(Properties)</Properties>
      </Project>
    </ItemGroup>
  </Target>

  <Target Name="BuildDependencies" DependsOnTargets="_AssignProjectProperties" Condition="@(Project) != ''">
    <Message Text="Building %(Project.Name) with %(Project.Properties)" Importance="$(_Low)" />
    <MSBuild Projects="@(Project)" Targets="$(_ProjectBuildTarget)" Properties="%(Project.Properties)" />
  </Target>

  <Target Name="CleanDependencies" DependsOnTargets="_AssignProjectProperties" Condition="@(Project) != ''">
    <MSBuild Projects="@(Project)" Targets="Clean" Properties="%(Project.Properties)" />
  </Target>

  <PropertyGroup>
    <BuildSdistDependsOn>$(BuildSdistDependsOn);BuildDependencies</BuildSdistDependsOn>
  </PropertyGroup>

  <!-- Clean support -->
  <Target Name="_SaveFileWrites" AfterTargets="Build;BuildSdist;BuildInPlace">
    <WriteLinesToFile File="$(IntDir)\$(TargetName).writes.txt"
                      Lines="@(FileWrites)"
                      Overwrite="true" />
    <Message Text="Files written:%0A -@(FileWrites, '%0A -')"
             Importance="$(_Low)"
             Condition="@(FileWrites) != ''" />
  </Target>

  <Target Name="_CleanFileWrites" BeforeTargets="Clean" DependsOnTargets="CleanDependencies">
    <ReadLinesFromFile File="$(IntDir)\$(TargetName).writes.txt">
      <Output TaskParameter="Lines" ItemName="FileWrites" />
    </ReadLinesFromFile>
    <Delete Files="@(FileWrites)" />
    <ItemGroup>
      <FileWrites Remove="@(FileWrites)" />
    </ItemGroup>
  </Target>

  <Import Project="sdist.targets" />
</Project>
